{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/cadoo-client/src/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuthContext } from \"./libs/Auth\";\n\nfunction PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  const {\n    authTokens\n  } = useAuthContext();\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => authTokens ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/daniel/Desktop/cadoo-client/src/PrivateRoute.js"],"names":["React","Route","Redirect","useAuthContext","PrivateRoute","component","Component","rest","authTokens","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,cAAT,QAA+B,aAA/B;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAtB,EAAyD;AACrD,QAAM;AAAEC,IAAAA;AAAF,MAAiBL,cAAc,EAArC;AAEF,sBACE,oBAAC,KAAD,oBACQI,IADR;AAEI,IAAA,MAAM,EAAEE,KAAK,IACTD,UAAU,gBACV,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADU,gBAGV,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAWD;;AAED,eAAeL,YAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuthContext } from \"./libs/Auth\";\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n    const { authTokens } = useAuthContext();\n  \n  return(\n    <Route \n        {...rest} \n        render={props => \n            authTokens ? (\n            <Component {...props} />\n        ) : (\n            <Redirect to=\"/login\" />\n        )}\n    />\n  );\n}\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}