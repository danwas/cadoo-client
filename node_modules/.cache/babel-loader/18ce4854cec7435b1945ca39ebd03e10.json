{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/DH2465-cadoo/code/frontend/client/src/containers/Login.js\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { useAuthContext } from \"../libs/Auth\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport \"../css/Login.css\";\nexport default function Login() {\n  const history = useHistory();\n  const {\n    setAuthTokens\n  } = useAuthContext();\n  const [authenticated, setAuthenticated] = useState(false);\n  const [email, SetEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\"\n  });\n\n  function validateForm() {\n    return fields.email.length > 0 && fields.password.length > 0;\n  }\n\n  function handleLogin(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    if (userAuth(fields.email, fields.password)) {\n      setAuthenticated(true);\n      setAuthTokens(\"test\");\n      history.push(\"/\");\n    } else {\n      alert(\"username or password is incorrect!\");\n      setIsLoading(false);\n    }\n  }\n\n  const userAuth = async (email, password) => {\n    const res = await fetch(\"/api/login\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: email,\n        password: password\n      })\n    });\n    const data = await res.json();\n    return data.success;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"email\",\n    bsSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ControlLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    autoFocus: true,\n    type: \"Email\",\n    placeholder: \"email@example.com\",\n    value: fields.email,\n    onChange: handleFieldChange,\n    class: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"password\",\n    bsSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ControlLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    placeholder: \"password\",\n    value: fields.password,\n    onChange: handleFieldChange,\n    type: \"password\",\n    class: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(LoaderButton, {\n    block: true,\n    type: \"submit\",\n    bsSize: \"large\",\n    isLoading: isLoading,\n    disabled: !validateForm(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n}","map":{"version":3,"sources":["/Users/daniel/Desktop/DH2465-cadoo/code/frontend/client/src/containers/Login.js"],"names":["React","useState","useHistory","FormGroup","FormControl","ControlLabel","useFormFields","useAuthContext","LoaderButton","Login","history","setAuthTokens","authenticated","setAuthenticated","email","SetEmail","password","setPassword","isLoading","setIsLoading","fields","handleFieldChange","validateForm","length","handleLogin","event","preventDefault","userAuth","push","alert","res","fetch","method","headers","body","JSON","stringify","username","data","json","success"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { useAuthContext } from \"../libs/Auth\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport \"../css/Login.css\";\n\nexport default function Login() {\n  const history = useHistory();\n  const { setAuthTokens } = useAuthContext();\n  const [authenticated, setAuthenticated] = useState(false);\n\n  const [email, SetEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\"\n  });\n  \n  function validateForm() {\n    return fields.email.length > 0 && fields.password.length > 0;\n  }\n\n  function handleLogin(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    if (userAuth(fields.email, fields.password)) {\n      setAuthenticated(true);\n      setAuthTokens(\"test\");\n      history.push(\"/\");\n\n    } else {\n      alert(\"username or password is incorrect!\");\n      setIsLoading(false);\n    }\n  }\n\n  const userAuth = async (email, password) => {\n    const res = await fetch(\"/api/login\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: email,\n        password: password\n      })\n    });\n    const data = await res.json();\n    return data.success;\n}\n\n  return (\n    <div className=\"Login\">\n      <form onSubmit={handleLogin}>\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <ControlLabel></ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"Email\"\n            placeholder=\"email@example.com\"\n            value={fields.email}\n            onChange={handleFieldChange}\n            class='form'\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <ControlLabel></ControlLabel>\n          <FormControl\n            placeholder=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n            type=\"password\"\n            class='form'\n          />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Login\n        </LoaderButton>\n      </form>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}