{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/DH2465-cadoo/code/frontend/client/src/containers/Room.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { ButtonGroup, ToggleButtonGroup, ToggleButton, Button, Navbar, Nav, NavItem, FormControl } from 'react-bootstrap';\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nimport { AuthContext, useAuthContext } from \"../libs/Auth\";\nimport \"../css/Room.css\";\n\nconst img_mute = require('../images/mute.png');\n\nconst img_video = require('../images/video.png');\n\nconst RemoteStyledVideo = styled.video`\n    width: 75%;\n    height: 75%;\n    -webkit-transform: scaleX(-1);\n    transform: scaleX(-1);\n    border-radius: 10px;\n    border: 2px solid white;\n    border-color: rgb(66, 66, 66);\n`;\nconst LocalStyledVideo = styled.video`\n    width: 100%;\n    height: 100%;\n    -webkit-transform: scaleX(-1);\n    transform: scaleX(-1);\n    border-radius: 10px;\n    border: 2px solid white;\n    border-color: rgb(66, 66, 66);\n`;\n\nconst Video = props => {\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on(\"stream\", stream => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(RemoteStyledVideo, {\n    playsInline: true,\n    autoPlay: true,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  });\n};\n\nconst videoConstraints = {\n  height: window.innerHeight,\n  width: window.innerWidth\n};\n\nconst Room = props => {\n  const [peers, setPeers] = useState([]);\n  const [toggleAudio, setToggleAudio] = useState(1);\n  const [toggleVideo, setToggleVideo] = useState(1);\n  const socketRef = useRef();\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const history = useHistory();\n  const context = useAuthContext(AuthContext);\n  const username = context.authTokens;\n  const roomID = props.match.params.roomID;\n  useEffect(() => {\n    socketRef.current = io.connect(\"/\");\n    navigator.mediaDevices.getUserMedia({\n      video: videoConstraints,\n      audio: true\n    }).then(stream => {\n      userVideo.current.srcObject = stream;\n      socketRef.current.emit(\"join-room\", {\n        roomID: roomID,\n        name: username\n      });\n      socketRef.current.on(\"all-users\", users => {\n        const peers = [];\n        users.forEach(participant => {\n          const peer = createPeer(participant.name, participant.id, socketRef.current.id, stream);\n          peersRef.current.push({\n            peerID: participant.id,\n            peerName: participant.name,\n            peer\n          });\n          peers.push({\n            peerID: participant.id,\n            peerName: participant.name,\n            peer\n          });\n        });\n        setPeers(peers);\n      });\n      socketRef.current.on(\"user-joined\", payload => {\n        const peer = addPeer(payload.name, payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peerName: payload.name,\n          peer\n        });\n        const peerObj = {\n          peer,\n          peerID: payload.callerID,\n          peerName: payload.name\n        };\n        setPeers(users => [...users, peerObj]);\n      });\n      socketRef.current.on(\"receiving-returned-signal\", payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        item.peer.signal(payload.signal);\n      });\n      socketRef.current.on(\"user-left\", id => {\n        const peerObj = peersRef.current.find(p => p.peerID === id);\n\n        if (peerObj) {\n          peerObj.peer.destroy();\n        }\n\n        const peers = peersRef.current.filter(p => p.peerID !== id);\n        peersRef.current = peers;\n        setPeers(peers);\n      });\n    });\n  }, []);\n\n  function createPeer(name, userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"sending-signal\", {\n        name,\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    return peer;\n  }\n\n  function addPeer(name, incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"returning-signal\", {\n        name,\n        signal,\n        callerID\n      });\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  }\n\n  function LeaveRoom() {\n    socketRef.current.emit(\"disconnect-button\");\n    stopBothVideoAndAudio(userVideo.current.srcObject);\n    socketRef.current.disconnect();\n    history.push({\n      pathname: '/'\n    });\n  }\n\n  function stopBothVideoAndAudio(stream) {\n    stream.getTracks().forEach(function (track) {\n      if (track.readyState == 'live') {\n        track.stop();\n      }\n    });\n  }\n\n  const handleChange = val => {\n    if (val == 0) {\n      if (toggleAudio == 1) {\n        alert(\"muted\");\n        setToggleAudio(0);\n      } else {\n        alert(\"not muted\");\n        setToggleAudio(1);\n      }\n    } else if (val == 1) {\n      if (toggleVideo == 1) {\n        alert(\"video off\");\n        setToggleVideo(0);\n      } else {\n        alert(\"video on\");\n        setToggleVideo(1);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Room\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"buttons-leave\",\n    onClick: LeaveRoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }, \"Leave\"), /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    type: \"checkbox\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    className: \"buttons-mute-off\",\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: img_mute,\n    className: \"mute-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(ToggleButton, {\n    className: \"buttons-mute-off\",\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: img_video,\n    className: \"mute-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"local-video-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(LocalStyledVideo, {\n    muted: true,\n    ref: userVideo,\n    autoPlay: true,\n    playsInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  }, \"H\\xE4r kommer en chat!\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    className: \"navbar-room\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    className: \"nav-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 25\n    }\n  }, \"Hi \", username, \"! You are Cadooing about - Chess\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lower-video-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"remote-video-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 25\n    }\n  }, peers.map(peer => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"remote-video-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Video, {\n      key: peer.peerID,\n      peer: peer.peer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 41\n      }\n    }, peer.peerName));\n  })))));\n};\n\nexport default Room; // filter(peer => peer.peerID !== socketRef.current.id)\n// {peers.map((peer) => {\n//     return (\n//         <Video key={peer.peerID} peer={peer.peer} />    \n//     );\n// })}","map":{"version":3,"sources":["/Users/daniel/Desktop/DH2465-cadoo/code/frontend/client/src/containers/Room.js"],"names":["React","useEffect","useRef","useState","useLocation","useHistory","ButtonGroup","ToggleButtonGroup","ToggleButton","Button","Navbar","Nav","NavItem","FormControl","io","Peer","styled","AuthContext","useAuthContext","img_mute","require","img_video","RemoteStyledVideo","video","LocalStyledVideo","Video","props","ref","peer","on","stream","current","srcObject","videoConstraints","height","window","innerHeight","width","innerWidth","Room","peers","setPeers","toggleAudio","setToggleAudio","toggleVideo","setToggleVideo","socketRef","userVideo","peersRef","history","context","username","authTokens","roomID","match","params","connect","navigator","mediaDevices","getUserMedia","audio","then","emit","name","users","forEach","participant","createPeer","id","push","peerID","peerName","payload","addPeer","signal","callerID","peerObj","item","find","p","destroy","filter","userToSignal","initiator","trickle","incomingSignal","LeaveRoom","stopBothVideoAndAudio","disconnect","pathname","getTracks","track","readyState","stop","handleChange","val","alert","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { ButtonGroup, ToggleButtonGroup, ToggleButton, Button, Navbar, Nav, NavItem, FormControl } from 'react-bootstrap';\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nimport { AuthContext, useAuthContext } from \"../libs/Auth\";\nimport \"../css/Room.css\"; \n\n\nconst img_mute = require('../images/mute.png');\nconst img_video = require('../images/video.png');\n\n\nconst RemoteStyledVideo = styled.video`\n    width: 75%;\n    height: 75%;\n    -webkit-transform: scaleX(-1);\n    transform: scaleX(-1);\n    border-radius: 10px;\n    border: 2px solid white;\n    border-color: rgb(66, 66, 66);\n`;\n\nconst LocalStyledVideo = styled.video`\n    width: 100%;\n    height: 100%;\n    -webkit-transform: scaleX(-1);\n    transform: scaleX(-1);\n    border-radius: 10px;\n    border: 2px solid white;\n    border-color: rgb(66, 66, 66);\n`;\n\n\nconst Video = (props) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        props.peer.on(\"stream\", stream => {\n            ref.current.srcObject = stream;\n        })\n    }, []);\n\n    return (\n        <RemoteStyledVideo playsInline autoPlay ref={ref} />\n    );\n}\n\nconst videoConstraints = {\n    height: window.innerHeight,\n    width: window.innerWidth,\n};\n\nconst Room = (props) => {\n    const [peers, setPeers] = useState([]);\n    const [toggleAudio, setToggleAudio] = useState(1);\n    const [toggleVideo, setToggleVideo] = useState(1);\n    const socketRef = useRef();\n    const userVideo = useRef();\n    const peersRef = useRef([]);\n    const history = useHistory();\n    \n    const context = useAuthContext(AuthContext);\n    const username = context.authTokens;\n    const roomID = props.match.params.roomID;\n\n\n    useEffect(() => {\n        socketRef.current = io.connect(\"/\");\n        \n        navigator.mediaDevices.getUserMedia({ video: videoConstraints, audio: true }).then(stream => {\n            userVideo.current.srcObject = stream;\n            socketRef.current.emit(\"join-room\", { \n                roomID: roomID, \n                name: username\n            });\n            \n            socketRef.current.on(\"all-users\", users => {\n                const peers = [];\n                users.forEach(participant => {\n                    const peer = createPeer(participant.name, participant.id, socketRef.current.id, stream);\n\n                    peersRef.current.push({\n                        peerID: participant.id,\n                        peerName: participant.name,\n                        peer,\n                    })\n                    peers.push({\n                        peerID: participant.id,\n                        peerName: participant.name,\n                        peer\n                    });\n                })\n                setPeers(peers);\n            });\n\n            socketRef.current.on(\"user-joined\", payload => {\n                const peer = addPeer(payload.name, payload.signal, payload.callerID, stream);\n                peersRef.current.push({\n                    peerID: payload.callerID,\n                    peerName: payload.name,\n                    peer,\n                })\n\n                const peerObj = {\n                    peer,\n                    peerID: payload.callerID,\n                    peerName: payload.name\n                }\n                setPeers(users => [...users, peerObj]);\n            });\n\n            socketRef.current.on(\"receiving-returned-signal\", payload => {\n                const item = peersRef.current.find(p => p.peerID === payload.id);\n                item.peer.signal(payload.signal);\n            });\n\n            socketRef.current.on(\"user-left\", id => {\n                const peerObj = peersRef.current.find(p => p.peerID === id);\n                if (peerObj) {\n                    peerObj.peer.destroy();\n                }\n                const peers = peersRef.current.filter(p => p.peerID !== id);\n                peersRef.current = peers;\n                setPeers(peers);\n\n            });\n           \n        })\n    }, []);\n\n    function createPeer(name, userToSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: true,\n            trickle: false,\n            stream,\n        });\n\n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"sending-signal\", { name, userToSignal, callerID, signal })\n        })\n\n        return peer;\n    }\n\n    function addPeer(name, incomingSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: false,\n            trickle: false,\n            stream,\n        })\n       \n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"returning-signal\", { name, signal, callerID })\n        })\n\n        peer.signal(incomingSignal);\n\n        return peer;\n    }\n\n    function LeaveRoom() {\n        socketRef.current.emit(\"disconnect-button\");\n        stopBothVideoAndAudio(userVideo.current.srcObject);\n        socketRef.current.disconnect();\n        history.push({\n            pathname: '/'\n        });  \n    }\n\n    function stopBothVideoAndAudio(stream) {\n        stream.getTracks().forEach(function(track) {\n            if (track.readyState == 'live') {\n                track.stop();\n            }\n        });\n    }\n\n    const handleChange = (val) => {\n        if (val == 0) {\n            if (toggleAudio == 1) {\n                alert(\"muted\");\n                setToggleAudio(0);\n            } else {\n                alert(\"not muted\");\n                setToggleAudio(1);\n            }\n\n        } else if (val == 1) {\n            if (toggleVideo == 1) {\n                alert(\"video off\");\n                setToggleVideo(0);\n            } else {\n                alert(\"video on\");\n                setToggleVideo(1);\n            }\n        }\n    }\n\n\n\n    return (\n            <div className=\"Room\">\n                <div className=\"column-left\">\n\n                    <div className=\"buttons-container\">\n                        \n                            <Button \n                                className=\"buttons-leave\" \n                                onClick={ LeaveRoom }\n                                \n                                >Leave</Button>\n\n                            <ToggleButtonGroup type=\"checkbox\" onChange={ handleChange }>\n                                <ToggleButton \n                                    className=\"buttons-mute-off\" \n                                    value={0}>\n                                    \n                                    <img\n                                        src= {img_mute}\n                                        className= 'mute-img'\n                                    />\n                                </ToggleButton>\n\n                                <ToggleButton \n                                    className=\"buttons-mute-off\" \n                                    value={1}>\n                                        \n                                    <img\n                                        src= {img_video}\n                                        className= 'mute-img'\n                                    />\n                                </ToggleButton>\n                            </ToggleButtonGroup>\n                        \n                    </div>\n\n                    <div className=\"local-video-container\">    \n                        <LocalStyledVideo muted ref={userVideo} autoPlay playsInline />\n                    </div>\n\n                    <div class=\"chat\">\n                        <p1>Här kommer en chat!</p1>\n                    </div>\n                </div>\n\n                <div className=\"column-right\">\n                    <Navbar className=\"navbar-room\">\n                        <Navbar.Brand className=\"nav-item\">Hi {username}! You are Cadooing about - Chess</Navbar.Brand>\n                    </Navbar>\n\n                    <div className=\"lower-video-bar\">\n                        <div className=\"remote-video-container\">\n                            {peers.map((peer) => {\n                                return (\n                                    <div className=\"remote-video-item\">\n                                        <Video key={peer.peerID} peer={peer.peer}/>\n                                        <h3>{peer.peerName}</h3>\n                                    </div>\n                                );\n                            })}\n                        </div>\n\n                    </div>\n                </div>\n            </div>         \n    );\n};\n\nexport default Room;\n\n\n// filter(peer => peer.peerID !== socketRef.current.id)\n\n// {peers.map((peer) => {\n\n                    \n//     return (\n//         <Video key={peer.peerID} peer={peer.peer} />    \n//     );\n// })}"]},"metadata":{},"sourceType":"module"}